CREATE SCHEMA dannys_diner;
SET search_path = dannys_diner;

CREATE TABLE sales (
  "customer_id" VARCHAR(1),
  "order_date" DATE,
  "product_id" INTEGER
);

INSERT INTO sales
  ("customer_id", "order_date", "product_id")
VALUES
  ('A', '2021-01-01', '1'),
  ('A', '2021-01-01', '2'),
  ('A', '2021-01-07', '2'),
  ('A', '2021-01-10', '3'),
  ('A', '2021-01-11', '3'),
  ('A', '2021-01-11', '3'),
  ('B', '2021-01-01', '2'),
  ('B', '2021-01-02', '2'),
  ('B', '2021-01-04', '1'),
  ('B', '2021-01-11', '1'),
  ('B', '2021-01-16', '3'),
  ('B', '2021-02-01', '3'),
  ('C', '2021-01-01', '3'),
  ('C', '2021-01-01', '3'),
  ('C', '2021-01-07', '3');
 

CREATE TABLE menu (
  "product_id" INTEGER,
  "product_name" VARCHAR(5),
  "price" INTEGER
);

INSERT INTO menu
  ("product_id", "product_name", "price")
VALUES
  ('1', 'sushi', '10'),
  ('2', 'curry', '15'),
  ('3', 'ramen', '12');
  

CREATE TABLE members (
  "customer_id" VARCHAR(1),
  "join_date" DATE

INSERT INTO members
  ("customer_id", "join_date")
VALUES
  ('A', '2021-01-07'),
  ('B', '2021-01-09');



1.What is the total amount each customer spent at the restaurant?
ANS : 
SET search_path to dannys_diner;
Select s.customer_id , SUM(m.price)
From Sales s
Join menu m on s.product_id = m.product_id
Group By customer_id 
ORDER BY
  s.customer_id;


2.How many days has each customer visited the restaurant?
ANS:
SET search_path to dannys_diner;
Select customer_id ,COUNT(DISTINCT "order_date") AS days_visited
From sales
Group by customer_id
order by customer_id;


3.What was the first item from the menu purchased by each customer?
ANS:
SET search_path to dannys_diner;

WITH firstPurchase AS (
  SELECT
    customer_id,
    order_date,
    product_id,
    ROW_NUMBER() OVER (PARTITION BY customer_id ORDER BY order_date) AS row_num
  FROM
    sales
)

SELECT
  fp.customer_id,
  m.product_name AS firstPurchasedItem
FROM
  firstPurchase fp
JOIN
  menu m ON fp.product_id = m.product_id
WHERE
  row_num = 1
ORDER BY
  fp.customer_id;




4. What is the most purchased item on the menu and how many times was it purchased by all customers?
ANS:
SET search_path to dannys_diner;

WITH PurchaseCounts AS (
  SELECT
    s."product_id",
    m."product_name",
    COUNT(*) AS purchase_count
  FROM
    sales s
    JOIN menu m ON s."product_id" = m."product_id"
  GROUP BY
    s."product_id", m."product_name"
)

SELECT
  "product_name" AS most_purchased_item,
  purchase_count
FROM
  PurchaseCounts
WHERE
  purchase_count = (SELECT MAX(purchase_count) FROM PurchaseCounts);




5. Which item was the most popular for each customer?
ANS:
WITH PurchaseCounts AS (
  SELECT
    s."customer_id",
    m."product_name",
    s."product_id",
    COUNT(*) AS purchase_count
  FROM
    sales s
    JOIN menu m ON s."product_id" = m."product_id"
  GROUP BY
    s."customer_id", m."product_name", s."product_id"
),

RankedPurchaseCounts AS (
  SELECT
    "customer_id",
    "product_name",
    "product_id",
    purchase_count,
    RANK() OVER (PARTITION BY "customer_id" ORDER BY purchase_count DESC) AS rank
  FROM
    PurchaseCounts
)

SELECT
  "customer_id",
  "product_name" AS most_popular_item,
  purchase_count
FROM
  RankedPurchaseCounts
WHERE
  rank = 1;

6.Which item was purchased first by the customer after they became a member?
ANS:
SET search_path to dannys_diner;

SELECT
  m."customer_id",
  MIN(s."order_date") AS "first_purchase_date",
  mm."product_name"
FROM
  members m
JOIN
  sales s ON m."customer_id" = s."customer_id" AND m."join_date" <= s."order_date"
JOIN
  menu mm ON s."product_id" = mm."product_id"
GROUP BY
  m."customer_id", mm."product_name"
ORDER BY
  m."customer_id", "first_purchase_date";

7.Which item was purchased just before the customer became a member?
ANS:
SET search_path to dannys_diner;

SELECT
  m."customer_id",
  MIN(s."order_date") AS "first_purchase_date",
  mm."product_name"
FROM
  members m
JOIN
  sales s ON m."customer_id" = s."customer_id" AND m."join_date" <= s."order_date"
JOIN
  menu mm ON s."product_id" = mm."product_id"
GROUP BY
  m."customer_id", mm."product_name"
ORDER BY
  m."customer_id", "first_purchase_date";


8.What is the total items and amount spent for each member before they became a member?
ANS:
SET search_path to dannys_diner;

WITH totalItemsBefore AS (
  SELECT
    s.customer_id,
    COUNT(s.product_id) AS totalItems,
    SUM(a.price) AS totalAmountSpent
  FROM
    sales s
    JOIN members m ON s.customer_id = m.customer_id
    JOIN menu a ON s.product_id = a.product_id
  WHERE
    s.order_date < m.join_date
  GROUP BY
    s.customer_id
  ORDER BY
    s.customer_id
)

SELECT *
FROM
  totalItemsBefore;
